# This file configures the workflow to run on Theia

platform: !Platform
  <<: *global_platform_common

  # Evaluate: this must be "false" to ensure disk space availability logic
  # is not run unless this file is for the current platform.
  Evaluate: false

  # name: the name of this platform; this must match what the underlying
  # scripts expect.
  name: ORION

  # detect: this is a function that returns true iff the user is on GAEA
  # and false otherwise
  detect: !calc tools.isdir("/work")

  # Additional variables to send to Rocoto XML entities or ecflow edits.
  metasched_more: !expand |
    {metasched.defvar(doc.schedvar.exclusive_queue, doc.accounting.exclusive_partition.exclusive_queue)}
    {metasched.defvar(doc.schedvar.shared_queue, doc.accounting.shared_partition.shared_queue)}
    {metasched.defvar(doc.schedvar.service_queue, doc.accounting.service_partition.service_queue)}
    {metasched.defvar(doc.schedvar.cpu_project, doc.accounting.cpu_project)}

  # DMPDIR - location of the global dump data.  This is used by the observation
  # processing scripts, which are not included in the public release.
  DMPDIR: "/work/noaa/marine/place_holder"
  NWPROD: "/work/noaa/marine/place_holder"
  RTMFIX: "/work/noaa/marine/place_holder"
  BASE_SVN: "/work/noaa/marine/place_holder"

  GODAS_RC: "/work/noaa/marine/marineda/godas_input" # Root path for external data

  # BASE_GIT - a directory maintained by emc global model developers
  # that contains recent versions of source code and executables for
  # various git repositories. This is used on some platforms to find
  # executables for this workflow.
  BASE_GIT: "/work/noaa/marine/place_holder"

  config_base_extras: !expand |
     echo "place holder for NWPROD and associated utilities, all except POSTGRB2TBL are going through load_gfs_modules.sh"

  CHGRP_RSTPROD_COMMAND: "chgrp rstprod"

  partitions:
    Evaluate: false
    default_shared: !calc doc.platform.partitions.orion
    default_exclusive: !calc doc.platform.partitions.orion
    default_service: !calc doc.platform.partitions.orion
    default_bigmem: !calc doc.platform.partitions.orion
    orion:
      <<: *global_partition_common
      specification: orion
      # Queues to use for each job type
      shared_queue: batch
      exclusive_queue: batch
      service_queue: service

      # Details about the scheduler on this cluster.
      scheduler_settings:
        scheduler_name: Slurm
        parallelism_name: HydraIMPI
        node_type: generic
        physical_cores_per_node: 40
        logical_cpus_per_core: 2
        hyperthreading_allowed: true
        indent_text: "  "
        memory_per_node: !calc (96*1024)

      exclusive_accounting_ref:
        queue: batch
        project: !calc doc.accounting.cpu_project
        partition: orion

      shared_accounting_ref:
        queue: batch
        project: !calc doc.accounting.cpu_project
        partition: orion

      service_accounting_ref:
        queue: service
        project: !calc doc.accounting.cpu_project
        partition: orion

      # Generate the actual Python objects for the scheduler, parallelism,
      # and nodes:
      scheduler: !calc |
        tools.get_scheduler(scheduler_settings.scheduler_name, scheduler_settings)
      parallelism: !calc |
        tools.get_parallelism(scheduler_settings.parallelism_name, scheduler_settings)
      nodes: !calc |
        tools.node_tool_for(scheduler_settings.node_type, scheduler_settings)

  # long_term_temp - area for storage of data that must be passed
  # between jobs or shared with programs external to this workflow.
  COMROOT: !expand "{doc.user_places.COMROOT}"

  # short_term_temp - area for data that is only needed within one job:
  DATAROOT: !expand "{doc.user_places.DATAROOT}"

  # EXPROOT - Parent directory  of the expdir (experiment directory)
  EXPROOT: !expand "{doc.user_places.EXPROOT}"
